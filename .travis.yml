language: cpp
matrix:
  include:
  - os: linux
    env: CONFIG=Debug
    compiler: gcc
    env: BUILD_DOCS=true
  - os: linux
    env: CONFIG=Release
    compiler: gcc
  - os: linux
    env: CONFIG=Debug
    compiler: clang
  - os: linux
    env: CONFIG=Release
    compiler: clang
  - os: osx
    env: CONFIG=Debug
    compiler: gcc
  - os: osx
    env: CONFIG=Release
    compiler: gcc
  - os: osx
    env: CONFIG=Debug
    compiler: clang
  - os: osx
    env: CONFIG=Release
    compiler: clang
sudo: false
dist: trusty
before_install:
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then pip install --user cpp-coveralls ; fi
  - if [ "$BUILD_DOCS" = true ] ; then sudo apt-get install -y doxygen ; fi
  - if [ "$BUILD_DOCS" = true ] ; then
      DOXYGEN_URL="http://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.linux.bin.tar.gz"
      mkdir doxygen && travis_retry wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen
      export PATH=`pwd`/doxygen/bin:${PATH}
      doxygen --version
    fi
before_script:
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${CONFIG} ..
script:
  - make
  - make test
  - if [ "$BUILD_DOCS" = true ] ; then make doxygen ; fi
after_success:
  - if [ "$CONFIG" == "Debug" ] && [ "$CXX" == "g++" ] && [ "$TRAVIS_OS_NAME" == linux ] ; then coveralls --root .. -E ".*external.*" -E ".*CMakeFiles.*" -E ".*tests/.*.cpp.*" ; fi
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  on:
    branch: master
    condition: "$BUILD_DOCS = true"
  local_dir: docs/html